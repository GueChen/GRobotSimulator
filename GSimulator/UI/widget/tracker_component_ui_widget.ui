<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>TrackerComponentUI</class>
 <widget class="QWidget" name="TrackerComponentUI">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>196</width>
    <height>228</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true">background-color: rgb(30, 30, 30);
color: rgb(0, 0, 0);
font: 9pt &quot;Microsoft YaHei UI&quot;;</string>
  </property>
  <layout class="QFormLayout" name="formLayout">
   <property name="rowWrapPolicy">
    <enum>QFormLayout::WrapAllRows</enum>
   </property>
   <item row="0" column="0" colspan="2">
    <widget class="QLabel" name="target_tag">
     <property name="styleSheet">
      <string notr="true">color: rgb(255, 255, 255);</string>
     </property>
     <property name="text">
      <string>target</string>
     </property>
    </widget>
   </item>
   <item row="1" column="0" colspan="2">
    <widget class="QComboBox" name="target_selector">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="styleSheet">
      <string notr="true">
QComboBox {
    border: 1px solid gray;
    border-radius: 3px;
    padding: 1px 18px 1px 3px;
    min-width: 6em;
}

QComboBox:editable {
    background: white;
}

QComboBox:!editable, QComboBox::drop-down:editable {
     
	 
     background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
}

/* QComboBox gets the &quot;on&quot; state when the popup is open */
QComboBox:!editable:on, QComboBox::drop-down:editable:on {
    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                stop: 0 #D3D3D3, stop: 0.4 #D8D8D8,
                                stop: 0.5 #DDDDDD, stop: 1.0 #E1E1E1);
}

QComboBox:on { /* shift the text when the popup opens */
    padding-top: 3px;
    padding-left: 4px;
}

QComboBox::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 15px;

    border-left-width: 1px;
    border-left-color: darkgray;
    border-left-style: solid; /* just a single line */
    border-top-right-radius: 3px; /* same radius as the QComboBox */
    border-bottom-right-radius: 3px;
}

QComboBox::down-arrow {
   image:url(:/16x16/downarrow16x16.png)
}

QComboBox::down-arrow:on { /* shift the arrow when popup is open */
    top: 1px;
    left: 1px;
}

QComboBox QAbstractItemView {
	
	 background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                 stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
                                 stop: 0.5 #D8D8D8, stop: 1.0 #D3D3D3);
    border: 2px solid darkgray;
    selection-background-color: lightgray;
}</string>
     </property>
     <item>
      <property name="text">
       <string>NULL</string>
      </property>
     </item>
    </widget>
   </item>
   <item row="2" column="0" colspan="2">
    <widget class="QLabel" name="state_tag">
     <property name="styleSheet">
      <string notr="true">color: rgb(255, 255, 255);</string>
     </property>
     <property name="text">
      <string>state</string>
     </property>
    </widget>
   </item>
   <item row="3" column="0" colspan="2">
    <layout class="QHBoxLayout" name="state_layout">
     <item>
      <widget class="QToolButton" name="tracking_button">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="minimumSize">
        <size>
         <width>0</width>
         <height>0</height>
        </size>
       </property>
       <property name="styleSheet">
        <string notr="true">QToolButton{
border: 2px solid rgba(0, 0, 0, 0);
border-radius: 2px;
color: rgb(175, 175, 175);
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(220, 195, 255, 155), stop:0.10 rgba(0, 0, 50, 255), stop:0.85 rgba(0, 20, 0, 255), stop:0.98 rgba(120, 100, 255, 100), stop: 1 rgba(50, 50, 150, 150));
}
QToolButton::hover{
color: rgb(255, 255, 255);
border: 1px solid rgb(255, 255, 255);
border-radius: 2px;
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(220, 195, 255, 155), stop:0.10 rgba(0, 0, 50, 255), stop:0.85 rgba(0, 20, 0, 255), stop:0.98 rgba(120, 100, 255, 100), stop: 1 rgba(50, 50, 150, 150));
}
QToolButton::checked{
color: rgb(155, 255, 155);
border: 2px solid rgb(155, 255, 155);
border-radius: 2px;
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(220, 195, 255, 155), stop:0.10 rgba(0, 0, 50, 255), stop:0.85 rgba(0, 20, 0, 255), stop:0.98 rgba(120, 100, 255, 100), stop: 1 rgba(50, 50, 150, 150));
}
QToolButton::checked::hover{
color: rgb(155, 255, 155);
border: 2px solid rgb(155, 255, 155);
border-radius: 2px;
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(220, 195, 255, 155), stop:0.10 rgba(0, 0, 50, 255), stop:0.85 rgba(0, 20, 0, 255), stop:0.98 rgba(120, 100, 255, 100), stop: 1 rgba(50, 50, 150, 150));
}</string>
       </property>
       <property name="text">
        <string>Tracking</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
       <property name="checked">
        <bool>false</bool>
       </property>
       <property name="autoRaise">
        <bool>false</bool>
       </property>
       <attribute name="buttonGroup">
        <string notr="true">tracker_controller_button_group</string>
       </attribute>
      </widget>
     </item>
     <item>
      <widget class="QToolButton" name="sleeping_button">
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="styleSheet">
        <string notr="true">QToolButton{
border: 2px solid rgba(0, 0, 0, 0);
border-radius: 2px;
color: rgb(175, 175, 175);
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(220, 195, 255, 155), stop:0.10 rgba(0, 0, 50, 255), stop:0.85 rgba(0, 20, 0, 255), stop:0.98 rgba(120, 100, 255, 100), stop: 1 rgba(50, 50, 150, 150));
}
QToolButton::hover{
color: rgb(255, 255, 255);
border: 1px solid rgb(255, 255, 255);
border-radius: 2px;
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(220, 195, 255, 155), stop:0.10 rgba(0, 0, 50, 255), stop:0.85 rgba(0, 20, 0, 255), stop:0.98 rgba(120, 100, 255, 100), stop: 1 rgba(50, 50, 150, 150));
}
QToolButton::checked{
color: rgb(155, 255, 155);
border: 2px solid rgb(155, 255, 155);
border-radius: 2px;
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(220, 195, 255, 155), stop:0.10 rgba(0, 0, 50, 255), stop:0.85 rgba(0, 20, 0, 255), stop:0.98 rgba(120, 100, 255, 100), stop: 1 rgba(50, 50, 150, 150));
}
QToolButton::checked::hover{
color: rgb(155, 255, 155);
border: 2px solid rgb(155, 255, 155);
border-radius: 2px;
background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:0.05 rgba(220, 195, 255, 155), stop:0.10 rgba(0, 0, 50, 255), stop:0.85 rgba(0, 20, 0, 255), stop:0.98 rgba(120, 100, 255, 100), stop: 1 rgba(50, 50, 150, 150));
}</string>
       </property>
       <property name="text">
        <string>Sleeping</string>
       </property>
       <property name="checkable">
        <bool>true</bool>
       </property>
       <property name="checked">
        <bool>true</bool>
       </property>
       <property name="popupMode">
        <enum>QToolButton::DelayedPopup</enum>
       </property>
       <property name="autoRaise">
        <bool>false</bool>
       </property>
       <attribute name="buttonGroup">
        <string notr="true">tracker_controller_button_group</string>
       </attribute>
      </widget>
     </item>
    </layout>
   </item>
   <item row="4" column="0" colspan="2">
    <widget class="QLabel" name="tracer_tag">
     <property name="styleSheet">
      <string notr="true">color: rgb(255, 255, 255);</string>
     </property>
     <property name="text">
      <string>tracer</string>
     </property>
    </widget>
   </item>
   <item row="5" column="0" colspan="2">
    <widget class="QListWidget" name="tracer_list">
     <property name="styleSheet">
      <string notr="true">QListView {
   background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(255, 255, 255, 255), stop:0.7 rgba(245, 245, 245, 255), stop:1  rgba(225, 225, 225, 255));
	border-radius:2px;
	border: 1px groove rgba(0, 120, 185, 155);
}
QMenu{
	color:white;
}
QScrollBar:vertical {
	 color:lightgrey;
     border: 2px solid grey;
     background: rgb(30, 30, 30);
 }
 QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
	border-left: 2px inset grey;
	border-right: 1px solid rgba(0, 120, 150, 255);
	background: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(120, 120, 120, 255), stop:0.5 rgba(100, 100, 100, 255), stop:1 rgba(80, 80, 80, 255));
 }</string>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <resources>
  <include location="../../resource/icons.qrc"/>
 </resources>
 <connections/>
 <buttongroups>
  <buttongroup name="tracker_controller_button_group"/>
 </buttongroups>
</ui>
